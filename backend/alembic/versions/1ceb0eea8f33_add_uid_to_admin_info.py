"""add uid to admin_info

Revision ID: 1ceb0eea8f33
Revises: feea628efd7e
Create Date: 2025-04-19 04:45:11.279242

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1ceb0eea8f33'
down_revision: Union[str, None] = 'feea628efd7e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('address_translation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jp', sa.String(), nullable=True),
    sa.Column('en', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('area_address_with_zipcode',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('area', sa.String(), nullable=True),
    sa.Column('area_id', sa.Integer(), nullable=True),
    sa.Column('area_en', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('zipcode', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sapporo_city_area',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('area', sa.String(), nullable=False),
    sa.Column('area_id', sa.Integer(), nullable=True),
    sa.Column('ward_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sorting_numbers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('categories', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('area_sorting',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('area', sa.String(), nullable=True),
    sa.Column('sorting_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['sorting_id'], ['sorting_numbers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sorting_translations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sorting_id', sa.Integer(), nullable=False),
    sa.Column('jp', sa.String(), nullable=True),
    sa.Column('en', sa.String(), nullable=True),
    sa.Column('zh', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['sorting_id'], ['sorting_numbers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('waste_item_with_id',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['sorting_numbers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('admin_info', sa.Column('uid', sa.String(), nullable=False))
    op.create_unique_constraint(None, 'admin_info', ['uid'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'admin_info', type_='unique')
    op.drop_column('admin_info', 'uid')
    op.drop_table('waste_item_with_id')
    op.drop_table('sorting_translations')
    op.drop_table('area_sorting')
    op.drop_table('sorting_numbers')
    op.drop_table('sapporo_city_area')
    op.drop_table('area_address_with_zipcode')
    op.drop_table('address_translation')
    # ### end Alembic commands ###
